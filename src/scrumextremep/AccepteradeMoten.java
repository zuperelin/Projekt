/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tobias
 */
public class AccepteradeMoten extends javax.swing.JFrame {

    private String anvID;
    /**
     * Creates new form AccepteradeMoten
     */
    public AccepteradeMoten(String anvandarID) {
        initComponents();
        anvID = anvandarID;
        fyllMotesforslag();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbValjMotesforslag = new javax.swing.JComboBox<>();
        cbValjDatum = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccepteratMote = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        cbValjTid = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbValjMotesforslag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj Mötesförslag" }));
        cbValjMotesforslag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjMotesforslagActionPerformed(evt);
            }
        });

        cbValjDatum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj Datum" }));
        cbValjDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjDatumActionPerformed(evt);
            }
        });

        tblAccepteratMote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Förnamn", "Efternamn", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblAccepteratMote);

        lblTotal.setText("Totalt Anmälda");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        cbValjTid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj Tid" }));
        cbValjTid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjTidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(lblTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnTillbaka)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbValjMotesforslag, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbValjDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbValjTid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbValjDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbValjMotesforslag, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbValjTid, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnTillbaka)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTotal)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbValjMotesforslagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjMotesforslagActionPerformed
          try{
              cbValjDatum.removeAllItems();
                String get = cbValjMotesforslag.getSelectedItem().toString(); 
        String sql = "SELECT DATUM FROM MFTIDDATUM JOIN MOTESFORSLAG ON MOTESFORSLAG.MF_ID = MFTIDDATUM.MF_ID WHERE TITEL = '" + get + "'";
    
        ArrayList<HashMap<String, String>> datum = Databas.getDatabas().fetchRows(sql);
        for (int i = 0; i < datum.size(); i++){
            cbValjDatum.addItem(datum.get(i).get("DATUM"));
                                                  }
           }
        catch(Exception e){
            System.out.println(e);
        }
       
    }//GEN-LAST:event_cbValjMotesforslagActionPerformed

    private void cbValjDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjDatumActionPerformed
         try{
             cbValjTid.removeAllItems();
             String getDatum = cbValjDatum.getSelectedItem().toString(); 
             String getTitle = cbValjMotesforslag.getSelectedItem().toString(); 
        String fyll = "SELECT TID FROM MFTIDDATUM WHERE DATUM = '" + getDatum + "' AND MF_ID = (SELECT MF_ID FROM MOTESFORSLAG WHERE TITEL = '" + getTitle + "')";
        ArrayList<HashMap<String, String>> datum = Databas.getDatabas().fetchRows(fyll);
        for (int i = 0; i < datum.size(); i++){
            cbValjTid.addItem(datum.get(i).get("TID"));
                                                  }
           }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_cbValjDatumActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
         new Calendar(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void cbValjTidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjTidActionPerformed
               clearTbl(); 
              
        try {
              String getTid = cbValjTid.getSelectedItem().toString(); 
              String getDatum = cbValjDatum.getSelectedItem().toString(); 
              String getTitel = cbValjMotesforslag.getSelectedItem().toString(); 
              
              
         String mSql = "select FORNAMN, EFTERNAMN, EMAIL \n" +
                       "from ANVANDARE \n" +
                       "join ACCEPTERADEMOTEN \n" +
                       "on ACCEPTERADEMOTEN.A_ID = ANVANDARE.A_ID \n" +
                       "join MFTIDDATUM \n" +
                       "on ACCEPTERADEMOTEN.TIDDATUM_ID = MFTIDDATUM.TIDDATUM_ID \n" +
                       "where TID = '" + getTid + "' AND DATUM = '" + getDatum + "'";
                
                ArrayList<HashMap<String, String>> anvandare = Databas.getDatabas().fetchRows(mSql);
                
                for(int i = 0; i < anvandare.size(); i++) {
                         String fornamn = anvandare.get(i).get("FORNAMN");
                         String efternamn = anvandare.get(i).get("EFTERNAMN");
                         String email = anvandare.get(i).get("EMAIL");

                DefaultTableModel dmt = (DefaultTableModel)tblAccepteratMote.getModel();
                dmt.addRow(new Object[] {fornamn, efternamn, email});
    }
    } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cbValjTidActionPerformed
    
    private void fyllMotesforslag(){ 
 
        try{
        String fyll = "SELECT MF_ID FROM MOTESFORSLAG"; 
        ArrayList<String> motesforslag = Databas.getDatabas().fetchColumn(fyll);
        for (String ettID : motesforslag){
            cbValjMotesforslag.addItem(Databas.getDatabas().fetchSingle("select titel from motesforslag where mf_id = " + ettID));
           
                                                  }
           }
        catch(Exception e){
            System.out.println(e);
        }
       
    }
    
    private void clearTbl() {
 
        DefaultTableModel dm = (DefaultTableModel) tblAccepteratMote.getModel();

        for (int i = 0; i < dm.getRowCount(); i++) {
            for (int j = 0; j < dm.getColumnCount(); j++) {
                dm.setRowCount(0);
            }
        }
    }
    
//    private void getRowCount(){
//        String antalRader = new String();
//        
//        DefaultTableModel dm = (DefaultTableModel) tblAccepteratMote.getModel();
//        int totalRows = dm.getRowCount();
//        String str = ToString(totalRows);
//        lblTotal.setText(totalRows);
//    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbValjDatum;
    private javax.swing.JComboBox<String> cbValjMotesforslag;
    private javax.swing.JComboBox<String> cbValjTid;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblAccepteratMote;
    // End of variables declaration//GEN-END:variables
}
