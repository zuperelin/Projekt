/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import com.toedter.calendar.JDateChooser;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Timmy
 */
public class Motesforslag extends javax.swing.JFrame {
    
    private String anvID;
    private String mfID = "";
    int index = 0;
    boolean motesForslagSkickat = false;
    boolean mfIDInteFinns = true;
    String nyttID = "";
    private String selectedMFID;

    /**
     * Creates new form Motesforslag
     */
    public Motesforslag(String anvandarID) {
        initComponents();
        anvID = anvandarID;
        fillComboBoxes();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMotesTitel = new javax.swing.JLabel();
        lblText = new javax.swing.JLabel();
        txt_motestitel = new javax.swing.JTextField();
        datechooser = new com.toedter.calendar.JDateChooser();
        btnSkickaForslag = new javax.swing.JButton();
        btnTillbaka = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_forslag = new javax.swing.JTable();
        lblDatumForslag = new javax.swing.JLabel();
        btnLaggTillForslag = new javax.swing.JButton();
        lblTidOchDatum = new javax.swing.JLabel();
        lblTidForslag = new javax.swing.JLabel();
        lblForslagSkickat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_text = new javax.swing.JTextArea();
        cb_timmar = new javax.swing.JComboBox<>();
        cb_minuter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMotesTitel.setText("Mötestitel");

        lblText.setText("Text");

        btnSkickaForslag.setText("Skicka förslag");
        btnSkickaForslag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkickaForslagActionPerformed(evt);
            }
        });

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        tbl_forslag.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Datum", "Tid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_forslag);
        if (tbl_forslag.getColumnModel().getColumnCount() > 0) {
            tbl_forslag.getColumnModel().getColumn(0).setResizable(false);
            tbl_forslag.getColumnModel().getColumn(1).setResizable(false);
        }

        lblDatumForslag.setText("Datumsförslag");

        btnLaggTillForslag.setText("Lägg till");
        btnLaggTillForslag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaggTillForslagActionPerformed(evt);
            }
        });

        lblTidOchDatum.setText("Dina datum- & tidsförslag");

        lblTidForslag.setText("Tidsförslag");

        txt_text.setColumns(20);
        txt_text.setRows(5);
        jScrollPane1.setViewportView(txt_text);

        cb_timmar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        cb_minuter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMotesTitel)
                                .addComponent(lblText))
                            .addGap(28, 28, 28))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(lblDatumForslag)
                            .addGap(18, 18, 18)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTidForslag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSkickaForslag, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(lblForslagSkickat, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_motestitel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cb_timmar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(cb_minuter, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(btnLaggTillForslag)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTidOchDatum)
                                .addContainerGap(74, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMotesTitel)
                            .addComponent(txt_motestitel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblText)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDatumForslag)
                            .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTidForslag)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cb_timmar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_minuter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLaggTillForslag)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(lblForslagSkickat))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btnSkickaForslag, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(lblTidOchDatum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 74, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSkickaForslagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkickaForslagActionPerformed
        DefaultTableModel dmt = (DefaultTableModel)tbl_forslag.getModel();
        
        if(dmt.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Det finns inga möteförslag att välja");
        } else {
        hamtaMFID();
        SkickaMail.skickaEttMail(anvID, selectedMFID);
        dmt.getDataVector().removeAllElements();
        revalidate();
        txt_motestitel.setText("");
        txt_text.setText("");
        datechooser = new JDateChooser();
        datechooser.setCalendar(null);
        lblForslagSkickat.setText("Mötesförslag skickat!");
        dmt.fireTableDataChanged();
        fillComboBoxes();
        }
    }//GEN-LAST:event_btnSkickaForslagActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        String sqlQueryDeleteTidDatumNyttID = "delete from mftiddatum where mf_id = " +nyttID;
        String sqlQueryDeleteTidDatumGammaltID = "delete from mftiddatum where mf_id = " +mfID;
        String sqlQueryDeleteMFNyttID = "delete from motesforslag where mf_id = " +nyttID;
        String sqlQueryDeleteMFGammaltID = "delete from motesforslag where mf_id = " +mfID;
        try
        {
            if(!motesForslagSkickat) {
                if(mfIDInteFinns) {
                    Databas.getDatabas().delete(sqlQueryDeleteTidDatumNyttID);
                    Databas.getDatabas().delete(sqlQueryDeleteMFNyttID);
                } else {
                    Databas.getDatabas().delete(sqlQueryDeleteTidDatumGammaltID);
                    Databas.getDatabas().delete(sqlQueryDeleteMFGammaltID);
                } 
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        new Calendar(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnLaggTillForslagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaggTillForslagActionPerformed
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        String info = txt_text.getText();
        DefaultTableModel dmt = (DefaultTableModel)tbl_forslag.getModel();
        String titel = txt_motestitel.getText();
        String text = txt_text.getText();
        
        String valdTimme = (String)cb_timmar.getSelectedItem();
        String valdMinut = (String)cb_minuter.getSelectedItem();
        String valdTid = valdTimme + valdMinut;
//        int valdTid = Integer.parseInt(tidTillsammans);
        String nyttID = "";
        
        if(datechooser.getDate() == null) {
            Validering.emptyDateChooser(datechooser);
            } else if(Validering.tomtTextfalt(txt_motestitel)
               && Validering.tomtTextArea(info)
                && Validering.datumKorrekt(datechooser)
                && Validering.tomCombo(cb_timmar)
                && Validering.tomCombo(cb_minuter))
               
        {
        String valtDatum = dFormat.format(datechooser.getDate());
        
            boolean mfIDInteFinns = true;
            try
            {

                String finnsID = Databas.getDatabas().fetchSingle("Select mf_id from motesforslag where titel = '" +titel+ "'");
                String mfNyttID = Databas.getDatabas().getAutoIncrement("MOTESFORSLAG", "MF_ID");
                String sqlQueryInsertMF = "Insert into motesforslag values (" +mfNyttID+ ", '" +titel+ "', '" +text+ "', " +anvID+ ")";
                String sqlQueryHamtaNyttID = "select mf_id from motesforslag where titel = '" +titel+ "'";
                    if(finnsID != null) {
                        mfIDInteFinns = false;
                        mfID = finnsID;
                    }

                if(mfIDInteFinns) {
                    Databas.getDatabas().insert(sqlQueryInsertMF);
                    nyttID = Databas.getDatabas().fetchSingle(sqlQueryHamtaNyttID);
                } 
            } catch(Exception e) {
                System.out.println(e.getMessage());
            }

            try
            {
                
                String tidDatumNyttID = Databas.getDatabas().getAutoIncrement("MFTIDDATUM", "TIDDATUM_ID");
                String sqlQueryInsertTidDatumNyttMF = "insert into mftiddatum values (" +tidDatumNyttID+ ", '" +valtDatum+ "', " +valdTid+ ", " +nyttID+ ")";
                String sqlQueryInsertTidDatum = "insert into mftiddatum values (" +tidDatumNyttID+ ", '"+valtDatum+ "', " +valdTid+ ", " +mfID+ ")";
                if(mfIDInteFinns) {
                    Databas.getDatabas().insert(sqlQueryInsertTidDatumNyttMF);
                    System.out.println("Ett nytt datumförslag har registrerats med ett nytt mötesförslag!");
                } else {
                    Databas.getDatabas().insert(sqlQueryInsertTidDatum);
                    System.out.println("Ett nytt datumförslag har registrerats!");
                }
            } catch(Exception e) {
                System.out.println(e.getMessage());
            }
            try
            {
                dmt.addRow(new Object[] {});
                tbl_forslag.setValueAt(valtDatum, index, 0);
                tbl_forslag.setValueAt(valdTimme + ":" + valdMinut, index, 1);

            } catch(Exception e) {
                System.out.println(e.getMessage());
            }
            index++;
            dmt.fireTableDataChanged();
        }
        fillComboBoxes();
    }
        private void fillComboBoxes()
    {
        fillCbTimmar();
        fillCbMinuter();
    }
        
        private void fillCbTimmar()
    {
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel() ;
        for(int i = 0; i<24; i++) {
            String a = Integer.toString(i);
            if(i<=9) {
                cbModel.addElement("0"+a);
            } else {
                cbModel.addElement(a);
            }
        }
        cb_timmar.setModel(cbModel);
    }
    
    private void fillCbMinuter()
    {
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel() ;
        for(int i = 0; i<60; i++) {
            String a = Integer.toString(i);
            if(i<=9) {
            cbModel.addElement("0"+a);
            } else {
                cbModel.addElement(a);
            }
        }
        cb_minuter.setModel(cbModel);
    
    }//GEN-LAST:event_btnLaggTillForslagActionPerformed

    private void hamtaMFID() {
        String sqlMFID = "SELECT MF_ID from MOTESFORSLAG WHERE TITEL = '" + txt_motestitel.getText() + "'";
        try { 
            selectedMFID = Databas.getDatabas().fetchSingle(sqlMFID);
        } catch (Exception e) {
                System.out.println(e.getMessage());
                }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaggTillForslag;
    private javax.swing.JButton btnSkickaForslag;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cb_minuter;
    private javax.swing.JComboBox<String> cb_timmar;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDatumForslag;
    private javax.swing.JLabel lblForslagSkickat;
    private javax.swing.JLabel lblMotesTitel;
    private javax.swing.JLabel lblText;
    private javax.swing.JLabel lblTidForslag;
    private javax.swing.JLabel lblTidOchDatum;
    private javax.swing.JTable tbl_forslag;
    private javax.swing.JTextField txt_motestitel;
    private javax.swing.JTextArea txt_text;
    // End of variables declaration//GEN-END:variables
}
