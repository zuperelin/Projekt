/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfException;

/**
 *
 * @author Alfred
 */
public class InloggadSida extends javax.swing.JFrame {

    private String anvID;
    /**
     * Creates new form InloggadSida
     */
    public InloggadSida(String anvandarID) {
        initComponents();
        fetchBlognamesForskning();
        anvID = anvandarID;
        hamtaSenaste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRubrik = new java.awt.Label();
        spBlogtitlar = new javax.swing.JScrollPane();
        tblBlogTitlar = new javax.swing.JTable();
        tpBloggar = new javax.swing.JTabbedPane();
        spForskning = new javax.swing.JScrollPane();
        taForskning = new javax.swing.JTextArea();
        spUtbildning = new javax.swing.JScrollPane();
        taUtbildning = new javax.swing.JTextArea();
        spInformell = new javax.swing.JScrollPane();
        taInformell = new javax.swing.JTextArea();
        btnRadera = new javax.swing.JButton();
        admin = new javax.swing.JButton();
        btnLoggaUt = new javax.swing.JButton();
        BtCalendar = new javax.swing.JButton();
        BtNewBlog = new javax.swing.JButton();
        btn_tillSorteraFiler = new javax.swing.JButton();
        lbl_bild = new javax.swing.JLabel();
        spKommentarsfällt = new javax.swing.JScrollPane();
        TaKomentarsfällt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaKommentar = new javax.swing.JTextPane();
        btnSend = new javax.swing.JButton();
        lblBakgrundVit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(911, 735));
        setSize(new java.awt.Dimension(911, 735));
        getContentPane().setLayout(null);

        lblRubrik.setAlignment(java.awt.Label.CENTER);
        lblRubrik.setBackground(new java.awt.Color(255, 255, 255));
        lblRubrik.setFont(new java.awt.Font("Impact", 0, 52)); // NOI18N
        lblRubrik.setText("Informatikblogg");
        getContentPane().add(lblRubrik);
        lblRubrik.setBounds(140, 50, 480, 120);

        tblBlogTitlar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBlogTitlar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBlogTitlarMouseClicked(evt);
            }
        });
        spBlogtitlar.setViewportView(tblBlogTitlar);

        getContentPane().add(spBlogtitlar);
        spBlogtitlar.setBounds(390, 210, 160, 360);

        spForskning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spForskningComponentShown(evt);
            }
        });

        taForskning.setEditable(false);
        taForskning.setColumns(20);
        taForskning.setLineWrap(true);
        taForskning.setRows(5);
        taForskning.setWrapStyleWord(true);
        spForskning.setViewportView(taForskning);

        tpBloggar.addTab("Forskning", spForskning);

        spUtbildning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spUtbildningComponentShown(evt);
            }
        });

        taUtbildning.setEditable(false);
        taUtbildning.setColumns(20);
        taUtbildning.setLineWrap(true);
        taUtbildning.setRows(5);
        taUtbildning.setWrapStyleWord(true);
        spUtbildning.setViewportView(taUtbildning);

        tpBloggar.addTab("Utbildning", spUtbildning);

        spInformell.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spInformellComponentShown(evt);
            }
        });

        taInformell.setEditable(false);
        taInformell.setColumns(20);
        taInformell.setLineWrap(true);
        taInformell.setRows(5);
        taInformell.setWrapStyleWord(true);
        spInformell.setViewportView(taInformell);

        tpBloggar.addTab("Informell", spInformell);

        getContentPane().add(tpBloggar);
        tpBloggar.setBounds(30, 190, 350, 380);

        btnRadera.setText("Arkiv / Redigera inlägg");
        btnRadera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaderaActionPerformed(evt);
            }
        });
        getContentPane().add(btnRadera);
        btnRadera.setBounds(270, 10, 160, 23);

        admin.setText("Redigera profiler");
        admin.setActionCommand("Administratör");
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        getContentPane().add(admin);
        admin.setBounds(130, 10, 113, 23);

        btnLoggaUt.setText("Logga ut");
        btnLoggaUt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoggaUtActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoggaUt);
        btnLoggaUt.setBounds(20, 10, 90, 23);

        BtCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scrumextremep/calendarMini.png"))); // NOI18N
        BtCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCalendarActionPerformed(evt);
            }
        });
        getContentPane().add(BtCalendar);
        BtCalendar.setBounds(640, 10, 100, 120);

        BtNewBlog.setText("Skapa nytt inlägg");
        BtNewBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtNewBlogActionPerformed(evt);
            }
        });
        getContentPane().add(BtNewBlog);
        BtNewBlog.setBounds(650, 210, 140, 30);

        btn_tillSorteraFiler.setText("Se bifogade filer");
        btn_tillSorteraFiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tillSorteraFilerActionPerformed(evt);
            }
        });
        getContentPane().add(btn_tillSorteraFiler);
        btn_tillSorteraFiler.setBounds(460, 10, 130, 23);
        getContentPane().add(lbl_bild);
        lbl_bild.setBounds(570, 280, 320, 190);

        TaKomentarsfällt.setColumns(20);
        TaKomentarsfällt.setRows(5);
        spKommentarsfällt.setViewportView(TaKomentarsfällt);

        getContentPane().add(spKommentarsfällt);
        spKommentarsfällt.setBounds(30, 580, 490, 80);

        jScrollPane2.setViewportView(TaKommentar);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(640, 580, 230, 70);

        btnSend.setText("Skicka kommentar");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend);
        btnSend.setBounds(740, 670, 140, 30);

        lblBakgrundVit.setBackground(java.awt.Color.white);
        lblBakgrundVit.setForeground(new java.awt.Color(255, 255, 255));
        lblBakgrundVit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scrumextremep/Namnlös.jpg"))); // NOI18N
        lblBakgrundVit.setText("jLabel1");
        lblBakgrundVit.setMaximumSize(new java.awt.Dimension(910, 690));
        lblBakgrundVit.setMinimumSize(new java.awt.Dimension(910, 690));
        lblBakgrundVit.setPreferredSize(new java.awt.Dimension(910, 690));
        getContentPane().add(lblBakgrundVit);
        lblBakgrundVit.setBounds(0, 0, 910, 740);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void spForskningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spForskningComponentShown
        fetchBlognamesForskning();
    }//GEN-LAST:event_spForskningComponentShown

    private void spUtbildningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spUtbildningComponentShown
        fetchBlognamesUtbildning();
        hamtaSenasteUtbildning();
    }//GEN-LAST:event_spUtbildningComponentShown

    private void tblBlogTitlarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBlogTitlarMouseClicked
        taForskning.removeAll();
        taUtbildning.removeAll();
        taInformell.removeAll();
        TaKomentarsfällt.removeAll();
        
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        
        String sqlquery = "Select TEXT from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String sqlKom = "SELECT TEXT FROM BLOGGKOMMENTAR where BI_ID = (SELECT BI_ID from Blogginlagg where titel = '" +tableValue+ "')";
        
        String titel = new String();
        String text  = new String(); 
        
        try {
            text = Databas.getDatabas().fetchSingle(sqlKom);
            titel = Databas.getDatabas().fetchSingle(sqlquery);
            
            if(tpBloggar.getSelectedIndex() == 0) {
                taForskning.setText(titel);
                TaKomentarsfällt.setText(text);
            } else if(tpBloggar.getSelectedIndex() == 1) {
                taUtbildning.setText(titel);
                TaKomentarsfällt.setText(text);
            } else if(tpBloggar.getSelectedIndex() == 2) {
                taInformell.setText(titel);
                TaKomentarsfällt.setText(text);
            }
           
       
        ArrayList<HashMap<String, String>> kommentar = new ArrayList<>();
       
        kommentar = Databas.getDatabas().fetchRows(text);
         
         for(int i = 0; i < kommentar.size(); i++) {
             String kom = kommentar.get(i).get("TEXT");
             TaKomentarsfällt.append(kom +"\n \n" );
    
         }    
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tblBlogTitlarMouseClicked

    private void btnLoggaUtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoggaUtActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Vill du logga ut?", "Logga ut", JOptionPane.YES_NO_OPTION);
        if (a==0){
            new ForstaSida().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnLoggaUtActionPerformed

    private void spInformellComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spInformellComponentShown
        fetchBlognamesInformell();
        hamtaSenasteInformell();
    }//GEN-LAST:event_spInformellComponentShown

    private void BtCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCalendarActionPerformed
        new Calendar(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_BtCalendarActionPerformed

    private void BtNewBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtNewBlogActionPerformed
         new CreateBlogg(anvID).setVisible(true);
         dispose();
    }//GEN-LAST:event_BtNewBlogActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        String sqlfraga = "SELECT ADMINISTRATOR FROM ANVANDARE WHERE A_ID = " + anvID;
        String admin = new String();
        try {
            admin = Databas.getDatabas().fetchSingle(sqlfraga);
            if (admin.contains("T")) {
                new RedigeraAnv(anvID).setVisible(true);
                dispose();
                } else {
                new RedigeraAnv(anvID).setVisible(true);
                dispose();
            }
            } catch (Exception e) {
                System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_adminActionPerformed

    private void btnRaderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaderaActionPerformed
        String sqlfraga = "SELECT ADMINISTRATOR FROM ANVANDARE WHERE A_ID = " + anvID;
        String admin = new String();
        try {
            admin = Databas.getDatabas().fetchSingle(sqlfraga);
            if(admin.contains("T")) {
                new RaderaBlogg(anvID).setVisible(true);
                dispose();
            }
            else {
                new EjAdminRaderaBlogg(anvID).setVisible(true);
                dispose();
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnRaderaActionPerformed

    private void btn_tillSorteraFilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tillSorteraFilerActionPerformed
        new SorteraFiler(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_tillSorteraFilerActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed

        TaKomentarsfällt.removeAll();
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        String inlagg = TaKommentar.getText();

        try{

            String titel = "SELECT BI_ID from Blogginlagg where titel = '" +tableValue+ "'";
            String inlaggsID = Databas.getDatabas().fetchSingle(titel);
            String BkID = Databas.getDatabas().getAutoIncrement("BLOGGKOMMENTAR" , "BK_ID");

            String sql = "INSERT INTO BLOGGKOMMENTAR Values ("+BkID+ " , '" +inlagg+ "' , " + anvID + ", "+inlaggsID+")";
            Databas.getDatabas().insert(sql);

        } catch (InfException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btnSendActionPerformed

    private void fetchBlognamesUtbildning() {
        String sqlquery = "select BI_ID, blogginlagg.titel from blogginlagg where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
                                      
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesForskning() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesInformell() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public String id(String anvID) {
        String dettaID = anvID;
        return dettaID;
    }
    
    private void hamtaSenaste() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taForskning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
     }
    
    private void hamtaSenasteUtbildning() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taUtbildning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }
    
    private void hamtaSenasteInformell() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taInformell.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }
    
    public static void bild(String valtInlagg, JLabel l){
        if(Desktop.isDesktopSupported()) {

            String sql = "SELECT BILD FROM BLOGGINLAGG WHERE TITEL ='" + valtInlagg + "'";

            try
            {
                String bildVag = Databas.getDatabas().fetchSingle(sql);
                File bild = new File("bilder\\" +bildVag);
                String b = bild.getAbsolutePath();
                ImageIcon bilden = new ImageIcon(new ImageIcon(b).getImage().getScaledInstance(300, 180, Image.SCALE_DEFAULT));
                l.setIcon(bilden);
            }

            catch(Exception ex)
            {
                System.out.println(ex);
            }
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtCalendar;
    private javax.swing.JButton BtNewBlog;
    private javax.swing.JTextArea TaKomentarsfällt;
    private javax.swing.JTextPane TaKommentar;
    private javax.swing.JButton admin;
    private javax.swing.JButton btnLoggaUt;
    private javax.swing.JButton btnRadera;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btn_tillSorteraFiler;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBakgrundVit;
    private java.awt.Label lblRubrik;
    private javax.swing.JLabel lbl_bild;
    private javax.swing.JScrollPane spBlogtitlar;
    private javax.swing.JScrollPane spForskning;
    private javax.swing.JScrollPane spInformell;
    private javax.swing.JScrollPane spKommentarsfällt;
    private javax.swing.JScrollPane spUtbildning;
    private javax.swing.JTextArea taForskning;
    private javax.swing.JTextArea taInformell;
    private javax.swing.JTextArea taUtbildning;
    private javax.swing.JTable tblBlogTitlar;
    private javax.swing.JTabbedPane tpBloggar;
    // End of variables declaration//GEN-END:variables
}
