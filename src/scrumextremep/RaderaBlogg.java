/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Timmy
 */
public class RaderaBlogg extends javax.swing.JFrame {

    private String anvID;
    File filnamn;        
    String bild = "";
    String filpath;
    String sokvag;
    public RaderaBlogg(String anvandarID) {
        initComponents();
        anvID = anvandarID;
        setLocationRelativeTo(null);
        hamtaSenaste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpBloggar = new javax.swing.JTabbedPane();
        spForskning = new javax.swing.JScrollPane();
        taForskning = new javax.swing.JTextArea();
        spUtbildning = new javax.swing.JScrollPane();
        taUtbildning = new javax.swing.JTextArea();
        spInformell = new javax.swing.JScrollPane();
        taInformell = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBlogTitlar = new javax.swing.JTable();
        btnTillbaka = new javax.swing.JButton();
        btnRadera = new javax.swing.JButton();
        btnRedigera = new javax.swing.JButton();
        tf_nyText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tf_nyTitel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_ArkivAdmin = new javax.swing.JButton();
        lbl_Bild = new javax.swing.JLabel();
        btn_LaggTillBild = new javax.swing.JButton();
        btn_LaggTillFil = new javax.swing.JButton();
        lbl_Fil = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spForskning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spForskningComponentShown(evt);
            }
        });

        taForskning.setColumns(20);
        taForskning.setLineWrap(true);
        taForskning.setRows(5);
        taForskning.setWrapStyleWord(true);
        spForskning.setViewportView(taForskning);

        tpBloggar.addTab("Forskning", spForskning);

        spUtbildning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spUtbildningComponentShown(evt);
            }
        });

        taUtbildning.setColumns(20);
        taUtbildning.setLineWrap(true);
        taUtbildning.setRows(5);
        taUtbildning.setWrapStyleWord(true);
        spUtbildning.setViewportView(taUtbildning);

        tpBloggar.addTab("Utbildning", spUtbildning);

        spInformell.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spInformellComponentShown(evt);
            }
        });

        taInformell.setColumns(20);
        taInformell.setLineWrap(true);
        taInformell.setRows(5);
        taInformell.setWrapStyleWord(true);
        spInformell.setViewportView(taInformell);

        tpBloggar.addTab("Informell", spInformell);

        tblBlogTitlar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBlogTitlar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBlogTitlarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBlogTitlar);
        if (tblBlogTitlar.getColumnModel().getColumnCount() > 0) {
            tblBlogTitlar.getColumnModel().getColumn(0).setResizable(false);
        }

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnRadera.setText("Radera inlägg");
        btnRadera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaderaActionPerformed(evt);
            }
        });

        btnRedigera.setText("Redigera inlägg");
        btnRedigera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedigeraActionPerformed(evt);
            }
        });

        jLabel1.setText("Ändra Titel");

        jLabel2.setText("Ändra Text");

        btn_ArkivAdmin.setText("Arkiv");
        btn_ArkivAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ArkivAdminActionPerformed(evt);
            }
        });

        btn_LaggTillBild.setText("Lägg till bild");
        btn_LaggTillBild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LaggTillBildActionPerformed(evt);
            }
        });

        btn_LaggTillFil.setText("Lägg till fil");
        btn_LaggTillFil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LaggTillFilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(278, Short.MAX_VALUE)
                        .addComponent(btnRedigera, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRadera, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(btn_ArkivAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTillbaka)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_nyText))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_nyTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_LaggTillBild)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_LaggTillFil)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbl_Fil, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(tpBloggar, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                                            .addComponent(lbl_Bild, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tpBloggar, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_Bild, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_nyTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_LaggTillBild)
                    .addComponent(btn_LaggTillFil)
                    .addComponent(lbl_Fil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_nyText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_ArkivAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btnRedigera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRadera, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spForskningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spForskningComponentShown
        fetchBlognamesForskning();
    }//GEN-LAST:event_spForskningComponentShown

    private void spUtbildningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spUtbildningComponentShown
        fetchBlognamesUtbildning();
        hamtaSenasteUtbildning();
    }//GEN-LAST:event_spUtbildningComponentShown

    private void spInformellComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spInformellComponentShown
        fetchBlognamesInformell();
        hamtaSenasteInformell();
    }//GEN-LAST:event_spInformellComponentShown

    private void tblBlogTitlarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBlogTitlarMouseClicked
        taForskning.removeAll();
        taUtbildning.removeAll();
        taInformell.removeAll();
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        
        String sqlquery = "Select TEXT from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String text = new String();
        String sqlfraga = "Select TITEL from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String titel = new String();
        
        try {
            InloggadSida.bild(tableValue, lbl_Bild);
            text = Databas.getDatabas().fetchSingle(sqlquery);
            titel = Databas.getDatabas().fetchSingle(sqlfraga);
            if(tpBloggar.getSelectedIndex() == 0) {
                taForskning.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 1) {
                taUtbildning.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 2) {
                taInformell.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tblBlogTitlarMouseClicked

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new InloggadSida(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnRaderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaderaActionPerformed
        raderaInlagg();
        clearTbl();
        JOptionPane.showMessageDialog(null, "Blogginlägget är raderat!");
    }//GEN-LAST:event_btnRaderaActionPerformed

    private void btnRedigeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedigeraActionPerformed
                if(Validering.tomtTextfalt(tf_nyTitel)
                && Validering.tomtTextfalt(tf_nyText)) {
                    redigeraInlagg();
                    clearTbl();
                    tf_nyText.setText("");
                    tf_nyTitel.setText("");
                    taForskning.setText("");
                    taUtbildning.setText("");
                    taInformell.setText("");  
                    fetchBlognamesUtbildning();
                    fetchBlognamesForskning();
                    fetchBlognamesInformell();
                }
    }//GEN-LAST:event_btnRedigeraActionPerformed

    private void btn_ArkivAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ArkivAdminActionPerformed
        new EjAdminRaderaBlogg(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_ArkivAdminActionPerformed

    private void btn_LaggTillBildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LaggTillBildActionPerformed
        JFileChooser jfc = new JFileChooser();
        if(jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String bildVag = jfc.getSelectedFile().getAbsolutePath();
            ImageIcon bilden = new ImageIcon(new ImageIcon(bildVag).getImage().getScaledInstance(300, 180, Image.SCALE_DEFAULT));
            lbl_Bild.setIcon(bilden);

            File mappen = new File("bilder");
            sokvag = mappen.getAbsolutePath();
            filnamn = jfc.getSelectedFile();
            bild = jfc.getName(filnamn);
            filpath = filnamn.getAbsolutePath();
        }
    }//GEN-LAST:event_btn_LaggTillBildActionPerformed

    private void btn_LaggTillFilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LaggTillFilActionPerformed
        oppnaChooser();
    }//GEN-LAST:event_btn_LaggTillFilActionPerformed

    private void fetchBlognamesUtbildning() {
        String sqlquery = "select BI_ID, blogginlagg.titel from blogginlagg where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
                                      
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesForskning() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesInformell() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void raderaInlagg() {
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        try {
        String biid = Databas.getDatabas().fetchSingle("Select BI_ID from BLOGGINLAGG where TITEL = '" + tableValue + "';");
        Databas.getDatabas().delete("DELETE FROM BLOGGKOMMENTAR WHERE BI_ID = " + biid + ";");
        Databas.getDatabas().delete("DELETE FROM BLOGGINLAGG WHERE BI_ID = " + biid + ";");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void redigeraInlagg() {
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String textValue = tf_nyText.getText();
        String titel = tf_nyTitel.getText();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        String filen = lbl_Fil.getText();
        
try {
            
            int u = JOptionPane.showConfirmDialog(null,"Vill du uppdatera detta blogginlägg?", "UPPDATERA",JOptionPane.YES_NO_OPTION);
            if (u==0){
                
            String biid = Databas.getDatabas().fetchSingle("Select BI_ID from BLOGGINLAGG where TITEL = '" + tableValue + "';");
          
            if(!textValue.equals("") || textValue != null) {
                Databas.getDatabas().update("Update blogginlagg set text = '" +textValue+ "' where bi_id = " +biid);
            }
            if(!titel.equals("") || titel != null) {
                Databas.getDatabas().update("Update blogginlagg set titel = '" +titel+ "' where bi_id = " +biid);
            }
            if(!filen.equals("") || filen != null) {
                Databas.getDatabas().update("Update blogginlagg set fil = '" +filen+ "' where bi_id = " +biid);
            }
            
            if(Validering.ingenBild(bild)){
              int j = JOptionPane.showConfirmDialog(null, "Detta blogginlägg har redan en bild. Vill du byta?", "BILD", JOptionPane.YES_NO_OPTION);
              if(j==0){
                  
              FileInputStream stream = new FileInputStream(filpath);
                FileOutputStream to = new FileOutputStream(sokvag + "//" +  bild);

                byte [] buffer = new byte[81920];
                int byteRead;
                while((byteRead = stream.read(buffer)) != -1) {
                to.write(buffer,0,byteRead);
                }
                Databas.getDatabas().update("Update blogginlagg set bild = '" +bild+ "' where bi_id = " +biid);
                
                JOptionPane.showMessageDialog(null, "Blogginlägget är redigerat!");
              } else {
                  lbl_Bild.setText("");
                  JOptionPane.showMessageDialog(null,"Inlägget är ej uppdaterad");
            }   
            }
            if(!Validering.ingenBild(bild)){
                FileInputStream stream = new FileInputStream(filpath);
                FileOutputStream to = new FileOutputStream(sokvag + "//" +  bild);

                byte [] buffer = new byte[81920];
                int byteRead;
                while((byteRead = stream.read(buffer)) != -1) {
                to.write(buffer,0,byteRead);
                }
                Databas.getDatabas().update("Update blogginlagg set bild = '" +bild+ "' where bi_id = " +biid);
                
                JOptionPane.showMessageDialog(null, "Blogginlägget är redigerat!");
            
              }
            }
            
            }
        
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void clearTbl() {
 
        DefaultTableModel dm = (DefaultTableModel) tblBlogTitlar.getModel();

        for (int i = 0; i < dm.getRowCount(); i++) {
            for (int j = 0; j < dm.getColumnCount(); j++) {
                dm.setRowCount(0);
            }
        }
    }
    
    private void hamtaSenaste() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taForskning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
     }
    
    private void hamtaSenasteUtbildning() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taUtbildning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }
    
    private void hamtaSenasteInformell() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taInformell.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }
         
         public String oppnaChooser()
    {
        String stringfil = "";
        final JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(RaderaBlogg.this);
    
        if(Desktop.isDesktopSupported())
        {
                 File mappen = new File("src\\scrumextremep\\resources");
                 String mappensPath = mappen.getAbsolutePath();
            
                 File filnamnet = fc.getSelectedFile();
                 String filpathen = filnamnet.getAbsolutePath();
        
                  File filen = fc.getSelectedFile();
                 stringfil = filen.getName();
         try
         {
                    FileInputStream stream = new FileInputStream(filpathen);
                    FileOutputStream to = new FileOutputStream(mappensPath + "//" +  stringfil);
                         
                            byte [] buffer = new byte[24576000];
                            int byteRead;
                            while((byteRead = stream.read(buffer)) != -1) {
                            to.write(buffer,0,byteRead);
                            System.out.println(mappensPath + stringfil);
                            lbl_Fil.setText(stringfil);
         return stringfil;
            }
            }       
         catch (FileNotFoundException ex) 
         {
                Logger.getLogger(CreateBlogg.class.getName()).log(Level.SEVERE, null, ex);
            } 
         catch (IOException ex) 
         {
                Logger.getLogger(CreateBlogg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return stringfil;
    
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRadera;
    private javax.swing.JButton btnRedigera;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btn_ArkivAdmin;
    private javax.swing.JButton btn_LaggTillBild;
    private javax.swing.JButton btn_LaggTillFil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Bild;
    private javax.swing.JLabel lbl_Fil;
    private javax.swing.JScrollPane spForskning;
    private javax.swing.JScrollPane spInformell;
    private javax.swing.JScrollPane spUtbildning;
    private javax.swing.JTextArea taForskning;
    private javax.swing.JTextArea taInformell;
    private javax.swing.JTextArea taUtbildning;
    private javax.swing.JTable tblBlogTitlar;
    private javax.swing.JTextField tf_nyText;
    private javax.swing.JTextField tf_nyTitel;
    private javax.swing.JTabbedPane tpBloggar;
    // End of variables declaration//GEN-END:variables
}
