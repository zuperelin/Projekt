/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Timmy
 */
public class RaderaBlogg extends javax.swing.JFrame {

    private String anvID;
    /**
     * Creates new form RaderaBlogg
     */
    public RaderaBlogg(String anvandarID) {
        initComponents();
        anvID = anvandarID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpBloggar = new javax.swing.JTabbedPane();
        spForskning = new javax.swing.JScrollPane();
        taForskning = new javax.swing.JTextArea();
        spUtbildning = new javax.swing.JScrollPane();
        taUtbildning = new javax.swing.JTextArea();
        spInformell = new javax.swing.JScrollPane();
        taInformell = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBlogTitlar = new javax.swing.JTable();
        btnTillbaka = new javax.swing.JButton();
        btnRadera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spForskning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spForskningComponentShown(evt);
            }
        });

        taForskning.setColumns(20);
        taForskning.setLineWrap(true);
        taForskning.setRows(5);
        taForskning.setWrapStyleWord(true);
        spForskning.setViewportView(taForskning);

        tpBloggar.addTab("Forskning", spForskning);

        spUtbildning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spUtbildningComponentShown(evt);
            }
        });

        taUtbildning.setColumns(20);
        taUtbildning.setLineWrap(true);
        taUtbildning.setRows(5);
        taUtbildning.setWrapStyleWord(true);
        spUtbildning.setViewportView(taUtbildning);

        tpBloggar.addTab("Utbildning", spUtbildning);

        spInformell.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spInformellComponentShown(evt);
            }
        });

        taInformell.setColumns(20);
        taInformell.setLineWrap(true);
        taInformell.setRows(5);
        taInformell.setWrapStyleWord(true);
        spInformell.setViewportView(taInformell);

        tpBloggar.addTab("Informell", spInformell);

        tblBlogTitlar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBlogTitlar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBlogTitlarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBlogTitlar);
        if (tblBlogTitlar.getColumnModel().getColumnCount() > 0) {
            tblBlogTitlar.getColumnModel().getColumn(0).setResizable(false);
        }

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnRadera.setText("Radera inlägg");
        btnRadera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaderaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(tpBloggar, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRadera, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tpBloggar, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 47, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTillbaka, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btnRadera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spForskningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spForskningComponentShown
        fetchBlognamesForskning();
    }//GEN-LAST:event_spForskningComponentShown

    private void spUtbildningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spUtbildningComponentShown
        fetchBlognamesUtbildning();
    }//GEN-LAST:event_spUtbildningComponentShown

    private void spInformellComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spInformellComponentShown
        fetchBlognamesInformell();
    }//GEN-LAST:event_spInformellComponentShown

    private void tblBlogTitlarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBlogTitlarMouseClicked
        taForskning.removeAll();
        taUtbildning.removeAll();
        taInformell.removeAll();
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        
        String sqlquery = "Select TEXT from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String titel = new String();
        
        try {
            titel = Databas.getDatabas().fetchSingle(sqlquery);
            if(tpBloggar.getSelectedIndex() == 0) {
                taForskning.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 1) {
                taUtbildning.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 2) {
                taInformell.setText(titel);
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tblBlogTitlarMouseClicked

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new InloggadSida(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnRaderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaderaActionPerformed
        raderaInlagg();
        JOptionPane.showMessageDialog(null, "Blogginlägget är raderat!");
    }//GEN-LAST:event_btnRaderaActionPerformed

    private void fetchBlognamesUtbildning() {
        String sqlquery = "select blogginlagg.titel from blogginlagg where b_id = (select b_id from blogg where bloggnamn = 'Utbildning')";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
                                      
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesForskning() {
        String sqlquery = "select BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning')";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesInformell() {
        String sqlquery = "select BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell')";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void raderaInlagg() {
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        try {
        String biid = Databas.getDatabas().fetchSingle("Select BI_ID from BLOGGINLAGG where TITEL = '" + tableValue + "';");
        Databas.getDatabas().delete("DELETE FROM BLOGGINLAGG WHERE BI_ID = " + biid + ";");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRadera;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane spForskning;
    private javax.swing.JScrollPane spInformell;
    private javax.swing.JScrollPane spUtbildning;
    private javax.swing.JTextArea taForskning;
    private javax.swing.JTextArea taInformell;
    private javax.swing.JTextArea taUtbildning;
    private javax.swing.JTable tblBlogTitlar;
    private javax.swing.JTabbedPane tpBloggar;
    // End of variables declaration//GEN-END:variables
}
