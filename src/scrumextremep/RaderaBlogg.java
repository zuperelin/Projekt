/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Timmy
 */
public class RaderaBlogg extends javax.swing.JFrame {

    private String anvID;
    /**
     * Creates new form RaderaBlogg
     */
    public RaderaBlogg(String anvandarID) {
        initComponents();
        anvID = anvandarID;
        setLocationRelativeTo(null);
        hamtaSenaste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpBloggar = new javax.swing.JTabbedPane();
        spForskning = new javax.swing.JScrollPane();
        taForskning = new javax.swing.JTextArea();
        spUtbildning = new javax.swing.JScrollPane();
        taUtbildning = new javax.swing.JTextArea();
        spInformell = new javax.swing.JScrollPane();
        taInformell = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBlogTitlar = new javax.swing.JTable();
        btnTillbaka = new javax.swing.JButton();
        btnRadera = new javax.swing.JButton();
        btnRedigera = new javax.swing.JButton();
        tf_nyText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tf_nyTitel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_ArkivAdmin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        spForskning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spForskningComponentShown(evt);
            }
        });

        taForskning.setColumns(20);
        taForskning.setLineWrap(true);
        taForskning.setRows(5);
        taForskning.setWrapStyleWord(true);
        spForskning.setViewportView(taForskning);

        tpBloggar.addTab("Forskning", spForskning);

        spUtbildning.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spUtbildningComponentShown(evt);
            }
        });

        taUtbildning.setColumns(20);
        taUtbildning.setLineWrap(true);
        taUtbildning.setRows(5);
        taUtbildning.setWrapStyleWord(true);
        spUtbildning.setViewportView(taUtbildning);

        tpBloggar.addTab("Utbildning", spUtbildning);

        spInformell.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                spInformellComponentShown(evt);
            }
        });

        taInformell.setColumns(20);
        taInformell.setLineWrap(true);
        taInformell.setRows(5);
        taInformell.setWrapStyleWord(true);
        spInformell.setViewportView(taInformell);

        tpBloggar.addTab("Informell", spInformell);

        tblBlogTitlar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBlogTitlar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBlogTitlarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBlogTitlar);
        if (tblBlogTitlar.getColumnModel().getColumnCount() > 0) {
            tblBlogTitlar.getColumnModel().getColumn(0).setResizable(false);
        }

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnRadera.setText("Radera inlägg");
        btnRadera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaderaActionPerformed(evt);
            }
        });

        btnRedigera.setText("Redigera inlägg");
        btnRedigera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedigeraActionPerformed(evt);
            }
        });

        jLabel1.setText("Ändra Titel");

        jLabel2.setText("Ändra Text");

        btn_ArkivAdmin.setText("Arkiv");
        btn_ArkivAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ArkivAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(278, Short.MAX_VALUE)
                        .addComponent(btnRedigera, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRadera, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_ArkivAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTillbaka)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tpBloggar, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_nyTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_nyText)))))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(tpBloggar, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_nyTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_nyText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_ArkivAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnRedigera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRadera, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spForskningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spForskningComponentShown
        fetchBlognamesForskning();
    }//GEN-LAST:event_spForskningComponentShown

    private void spUtbildningComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spUtbildningComponentShown
        fetchBlognamesUtbildning();
        hamtaSenasteUtbildning();
    }//GEN-LAST:event_spUtbildningComponentShown

    private void spInformellComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_spInformellComponentShown
        fetchBlognamesInformell();
        hamtaSenasteInformell();
    }//GEN-LAST:event_spInformellComponentShown

    private void tblBlogTitlarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBlogTitlarMouseClicked
        taForskning.removeAll();
        taUtbildning.removeAll();
        taInformell.removeAll();
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        
        String sqlquery = "Select TEXT from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String text = new String();
        String sqlfraga = "Select TITEL from BLOGGINLAGG where TITEL = '" + tableValue + "'";
        String titel = new String();
        
        try {
            text = Databas.getDatabas().fetchSingle(sqlquery);
            titel = Databas.getDatabas().fetchSingle(sqlfraga);
            if(tpBloggar.getSelectedIndex() == 0) {
                taForskning.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 1) {
                taUtbildning.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            } else if(tpBloggar.getSelectedIndex() == 2) {
                taInformell.setText(text);
                tf_nyText.setText(text);
                tf_nyTitel.setText(titel);
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tblBlogTitlarMouseClicked

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new InloggadSida(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnRaderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaderaActionPerformed
        raderaInlagg();
        clearTbl();
        JOptionPane.showMessageDialog(null, "Blogginlägget är raderat!");
    }//GEN-LAST:event_btnRaderaActionPerformed

    private void btnRedigeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedigeraActionPerformed
        redigeraInlagg();
        clearTbl();
        tf_nyText.setText("");
        tf_nyTitel.setText("");
        taForskning.setText("");
        taUtbildning.setText("");
        taInformell.setText("");  
        fetchBlognamesUtbildning();
        fetchBlognamesForskning();
        fetchBlognamesInformell();
        JOptionPane.showMessageDialog(null, "Blogginlägget är redigerat!");
    }//GEN-LAST:event_btnRedigeraActionPerformed

    private void btn_ArkivAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ArkivAdminActionPerformed
        new EjAdminRaderaBlogg(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_ArkivAdminActionPerformed

    private void fetchBlognamesUtbildning() {
        String sqlquery = "select BI_ID, blogginlagg.titel from blogginlagg where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
                                      
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesForskning() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fetchBlognamesInformell() {
        String sqlquery = "select BI_ID, BLOGGINLAGG.TITEL from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
        ArrayList<HashMap<String, String>> blognames = new ArrayList<>();
        DefaultTableModel dmt = (DefaultTableModel)tblBlogTitlar.getModel();
        dmt.getDataVector().removeAllElements();
        revalidate();
        try {
         blognames = Databas.getDatabas().fetchRows(sqlquery);
         
         for(int i = 0; i < blognames.size(); i++) {
             String names = blognames.get(i).get("TITEL");
             
             dmt.addRow(new Object[] {names});
                 }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void raderaInlagg() {
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        try {
        String biid = Databas.getDatabas().fetchSingle("Select BI_ID from BLOGGINLAGG where TITEL = '" + tableValue + "';");
        Databas.getDatabas().delete("DELETE FROM BLOGGINLAGG WHERE BI_ID = " + biid + ";");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void redigeraInlagg() {
        int a = tblBlogTitlar.getSelectedRow();
        int b = tblBlogTitlar.getSelectedColumn();
        String textValue = tf_nyText.getText();
        String tableValör = tf_nyTitel.getText();
        String tableValue = (String) tblBlogTitlar.getModel().getValueAt(a, b);
        
        try {
            String biid = Databas.getDatabas().fetchSingle("Select BI_ID from BLOGGINLAGG where TITEL = '" + tableValue + "';");
            Databas.getDatabas().update("UPDATE BLOGGINLAGG SET TEXT = '" + textValue + "', TITEL = '" + tableValör + "' WHERE BI_ID = " + biid + ";");
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void clearTbl() {
 
        DefaultTableModel dm = (DefaultTableModel) tblBlogTitlar.getModel();

        for (int i = 0; i < dm.getRowCount(); i++) {
            for (int j = 0; j < dm.getColumnCount(); j++) {
                dm.setRowCount(0);
            }
        }
    }
    
    private void hamtaSenaste() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Forskning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taForskning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
     }
    
    private void hamtaSenasteUtbildning() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Utbildning') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taUtbildning.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }
    
    private void hamtaSenasteInformell() {
         String sqlfraga = "SELECT BLOGGINLAGG.TEXT from BLOGGINLAGG where b_id = (select b_id from blogg where bloggnamn = 'Informell') order by BI_ID DESC";
         String text = new String();
         try {
             text = Databas.getDatabas().fetchSingle(sqlfraga);
             taInformell.setText(text);
         } catch (Exception e) {
             System.out.println(e.getMessage());
         }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRadera;
    private javax.swing.JButton btnRedigera;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btn_ArkivAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane spForskning;
    private javax.swing.JScrollPane spInformell;
    private javax.swing.JScrollPane spUtbildning;
    private javax.swing.JTextArea taForskning;
    private javax.swing.JTextArea taInformell;
    private javax.swing.JTextArea taUtbildning;
    private javax.swing.JTable tblBlogTitlar;
    private javax.swing.JTextField tf_nyText;
    private javax.swing.JTextField tf_nyTitel;
    private javax.swing.JTabbedPane tpBloggar;
    // End of variables declaration//GEN-END:variables
}
