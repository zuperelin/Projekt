/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfException;

/**
 *
 * @author joaki
 */
public class SorteraFiler extends javax.swing.JFrame {

       private String anvID;

    public SorteraFiler(String anvandarID) {
        initComponents();
        anvID = anvandarID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTillbaka = new javax.swing.JButton();
        cb_period = new javax.swing.JComboBox<>();
        cb_valjAr = new javax.swing.JComboBox<>();
        cb_valjManad = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_filer = new javax.swing.JTable();
        btn_oppna = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        cb_period.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kvartal", "Jan-Mars", "April-Juni", "Juli-Sep", "Okt-Dec", " ", " " }));
        cb_period.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cb_periodMouseClicked(evt);
            }
        });
        cb_period.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_periodActionPerformed(evt);
            }
        });

        cb_valjAr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "År", "2015", "2016", "2017", "2018", "2019", "2020", " " }));
        cb_valjAr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_valjArActionPerformed(evt);
            }
        });

        cb_valjManad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Månad", "01 Januari", "02 Februari", "03 Mars", "04 April", "05 Maj", "06 Juni", "07 Juli", "08 Augusti", "09 September", "10 Oktober", "11 November", "12 December" }));
        cb_valjManad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_valjManadActionPerformed(evt);
            }
        });

        tbl_filer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Filer för vald period"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_filer);
        if (tbl_filer.getColumnModel().getColumnCount() > 0) {
            tbl_filer.getColumnModel().getColumn(0).setResizable(false);
        }

        btn_oppna.setText("Öppna vald fil");
        btn_oppna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_oppnaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTillbaka)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_valjManad, 0, 162, Short.MAX_VALUE)
                            .addComponent(cb_period, 0, 162, Short.MAX_VALUE)
                            .addComponent(cb_valjAr, 0, 162, Short.MAX_VALUE)
                            .addComponent(btn_oppna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(99, 116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_valjAr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(cb_period, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cb_valjManad, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_oppna))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new InloggadSida(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void cb_periodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_periodMouseClicked
        
    }//GEN-LAST:event_cb_periodMouseClicked

    private void cb_valjArActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_valjArActionPerformed
                clearTbl();
        
        int index = cb_valjAr.getSelectedIndex();
        String year = cb_valjAr.getItemAt(index);
        String sql = "SELECT FIL FROM BLOGGINLAGG WHERE EXTRACT (YEAR FROM DATUM) = " + year + "";
        
        try{
         ArrayList<HashMap<String, String>> filer = Databas.getDatabas().fetchRows(sql);
        for (int i = 0; i < filer.size(); i++){
           String fil = filer.get(i).get("FIL");
             
           DefaultTableModel dmt = (DefaultTableModel)tbl_filer.getModel();
           dmt.addRow(new Object[] {fil});
        }
        }
            catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cb_valjArActionPerformed

    private void cb_valjManadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_valjManadActionPerformed
        clearTbl();
        
        int index = cb_valjManad.getSelectedIndex();
        String month = cb_valjManad.getItemAt(index);
        String monthNumber = month.substring(0, 2);
        String sql = "SELECT FIL FROM BLOGGINLAGG WHERE EXTRACT (MONTH FROM DATUM) = " + monthNumber + "";
        
        try{
         ArrayList<HashMap<String, String>> filer = Databas.getDatabas().fetchRows(sql);
        for (int i = 0; i < filer.size(); i++){
           String fil = filer.get(i).get("FIL");
             
           DefaultTableModel dmt = (DefaultTableModel)tbl_filer.getModel();
           dmt.addRow(new Object[] {fil});
        }
        }
            catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cb_valjManadActionPerformed

    private void cb_periodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_periodActionPerformed
                clearTbl();
        
        int index = cb_period.getSelectedIndex();
        String period = cb_period.getItemAt(index);
        
        int indexet = cb_valjAr.getSelectedIndex();
        String year = cb_valjAr.getItemAt(indexet);

        
            String month1 = "";
            String month2 = "";
            String month3 = "";
        if(period.contains("Jan")){
            month1 = "01";
            month2 = "02";
            month3 = "03";
        }
           else if(period.contains("April")){
            month1 = "04";
            month2 = "05";
            month3 = "06";
        }
           else if(period.contains("Juli")){
            month1 = "07";
            month2 = "08";
            month3 = "09";
           }
            else if(period.contains("Dec")){
            month1 = "10";
            month2 = "11";
            month3 = "12";
           }
            
        
        
     
        
        String sql = "SELECT FIL FROM BLOGGINLAGG WHERE EXTRACT (YEAR FROM DATUM) = " + year + " \n" +
        "AND (EXTRACT (MONTH FROM DATUM) = " + month1 + " OR EXTRACT (MONTH FROM DATUM)  = " + month2 + " OR EXTRACT (MONTH FROM DATUM) = " + month3 + ")";
     
        try{
         ArrayList<HashMap<String, String>> filer = Databas.getDatabas().fetchRows(sql);
        for (int i = 0; i < filer.size(); i++){
           String fil = filer.get(i).get("FIL");
             
           DefaultTableModel dmt = (DefaultTableModel)tbl_filer.getModel();
           dmt.addRow(new Object[] {fil});
        }
        }
            catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_cb_periodActionPerformed

    private void btn_oppnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_oppnaActionPerformed
        if(Desktop.isDesktopSupported())
        {

            File mappen = new File("src\\scrumextremep\\resources");
            String sokvag = mappen.getAbsolutePath();

            int a = tbl_filer.getSelectedRow();
            int b = tbl_filer.getSelectedColumn();
            String tableValue = (String) tbl_filer.getModel().getValueAt(a, b);

            String sql = "SELECT FIL FROM BLOGGINLAGG WHERE FIL ='" + tableValue + "'";

            try
            {
                String hej = Databas.getDatabas().fetchSingle(sql);
                String path = sokvag + "//" + hej;
                File myFile = new File(path);
                Desktop.getDesktop().open(myFile);
            }

            catch(IOException ex)
            {
                System.out.println(ex);
            }
            catch (InfException ex)
            {
                Logger.getLogger(ForstaSida.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_oppnaActionPerformed

    private void clearTbl() {
 
        DefaultTableModel dm = (DefaultTableModel) tbl_filer.getModel();

        for (int i = 0; i < dm.getRowCount(); i++) {
            for (int j = 0; j < dm.getColumnCount(); j++) {
                dm.setRowCount(0);
            }
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btn_oppna;
    private javax.swing.JComboBox<String> cb_period;
    private javax.swing.JComboBox<String> cb_valjAr;
    private javax.swing.JComboBox<String> cb_valjManad;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_filer;
    // End of variables declaration//GEN-END:variables
}
