/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumextremep;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import oru.inf.InfException;

/**
 *
 * @author elin-
 */
public class RedigeraAnv extends javax.swing.JFrame {

    private String anvID;
    private String selectedAID;
    private boolean chbAdminChanged;
    /**
     * Creates new form AdminAnd
     */
    public RedigeraAnv(String anvandarID) {
        initComponents();
        anvID = anvandarID;
        fillCbAnvandare();
        adminHide();
        fillUserValues();
        setLocationRelativeTo(null);
        System.out.println("inne på klassen med aid:" +anvID);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        saver = new javax.swing.JButton();
        deleteu = new javax.swing.JButton();
        lblAnv = new javax.swing.JLabel();
        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblAnvNamn = new javax.swing.JLabel();
        lblLosenord = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        chbAdmin = new javax.swing.JCheckBox();
        btnTillbaka = new javax.swing.JButton();
        tfFornamn = new javax.swing.JTextField();
        tfAnvNamn = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        tfEfternamn = new javax.swing.JTextField();
        tfLosenord = new javax.swing.JTextField();
        btnSkapa = new javax.swing.JButton();
        cbAnv = new javax.swing.JComboBox<>();
        cb_Anvandare = new javax.swing.JComboBox<>();
        chb_Blockera = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(790, 623));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Redigera Profil");

        saver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saver.setText("Spara");
        saver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saverActionPerformed(evt);
            }
        });

        deleteu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteu.setText("Ta bort användare");
        deleteu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteuActionPerformed(evt);
            }
        });

        lblAnv.setText("Användare");

        lblFornamn.setText("Förnamn");

        lblEfternamn.setText("Efternamn");

        lblAnvNamn.setText("Användarnamn");

        lblLosenord.setText("Lösenord");

        lblEmail.setText("Email");

        chbAdmin.setText("Administratör");

        btnTillbaka.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnSkapa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSkapa.setText("Skapa användare");
        btnSkapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaActionPerformed(evt);
            }
        });

        cbAnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnvActionPerformed(evt);
            }
        });

        cb_Anvandare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_AnvandareActionPerformed(evt);
            }
        });

        chb_Blockera.setText("Blockera");

        jLabel2.setText("Vill du blockera en användare");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chb_Blockera)
                            .addComponent(cb_Anvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saver, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel1)
                        .addGap(161, 161, 161)
                        .addComponent(btnTillbaka)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnSkapa, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(deleteu, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAnv)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFornamn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblEfternamn)
                                        .addGap(121, 121, 121))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLosenord)
                                            .addComponent(tfEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(170, 170, 170)
                                                        .addComponent(chbAdmin))
                                                    .addComponent(lblEmail)))
                                            .addComponent(lblAnvNamn)
                                            .addComponent(cbAnv, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfAnvNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnTillbaka))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)))
                .addGap(20, 20, 20)
                .addComponent(lblAnv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbAnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornamn)
                    .addComponent(lblEfternamn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfEfternamn)
                        .addGap(10, 10, 10)))
                .addComponent(lblAnvNamn)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAnvNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chbAdmin))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblLosenord)
                        .addGap(18, 18, 18)
                        .addComponent(tfLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(saver)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_Anvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chb_Blockera)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSkapa)
                    .addComponent(deleteu))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new InloggadSida(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnSkapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaActionPerformed
        new Laggtill(anvID).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSkapaActionPerformed

    private void cbAnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnvActionPerformed
        if(Validering.adminCheck(anvID)) {
            try{
        String valdAnv = (String)cbAnv.getSelectedItem();
        String anvandarID = valdAnv.replaceAll("[^0-9]", "");
        selectedAID = anvandarID;
        fillUserValues();
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cbAnvActionPerformed

    private void saverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saverActionPerformed
        if(Validering.tomtTextfalt(tfFornamn) && Validering.valideraNamn(tfFornamn)
                && Validering.tomtTextfalt(tfEfternamn) && Validering.valideraNamn(tfEfternamn)
                && Validering.tomtTextfalt(tfAnvNamn)
                && Validering.tomtTextfalt(tfLosenord) && Validering.valideraLosenLangd(tfLosenord)
                && Validering.tomtTextfalt(tfEmail) && Validering.giltigMail(tfEmail)) {
                    updateValuesDB();
                    
                    blockera();
                    cbAnv.removeAllItems();
                    fillAnvCB();
        
        JOptionPane.showMessageDialog(null, "Användare har uppdaterats!");
        }
    }//GEN-LAST:event_saverActionPerformed

    private void deleteuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteuActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Vill du ta bort denna användare?", "Ta bort", JOptionPane.YES_NO_OPTION);
        if (a==0){
            deleteUser();
            cbAnv.removeAllItems();
            fillAnvCB();
           
            JOptionPane.showMessageDialog(null, "Användare borttagen!");
        }
    }//GEN-LAST:event_deleteuActionPerformed

    private void cb_AnvandareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_AnvandareActionPerformed
        String anvandare = (String)cb_Anvandare.getSelectedItem();
        String anvandareID= anvandare.replaceAll("[^0-9]", "");
        String sqlQueryKollaBlock = "select a_id, blockad_id from anvandareblock where a_id = " +anvID+ " and blockad_id = " +anvandareID;

        try
        {
            if(Databas.getDatabas().fetchSingle(sqlQueryKollaBlock) == null) {
                chb_Blockera.setSelected(false);
            } else {
                chb_Blockera.setSelected(true);
            }
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cb_AnvandareActionPerformed

    private void fillAnvCB() {
        String sqlfraga = "Select fornamn, efternamn, a_id from ANVANDARE";
        try {
            ArrayList<HashMap<String, String>> anvInfo = Databas.getDatabas().fetchRows(sqlfraga);

                for (int i = 0; i < anvInfo.size(); i++)
                    cbAnv.addItem(anvInfo.get(i).get("FORNAMN") + " " + anvInfo.get(i).get("EFTERNAMN") +" " + anvInfo.get(i).get("A_ID")); 
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
        
    private void fillUserValues() {
        
        try {
            if(Validering.adminCheck(anvID)) {
                String sqlQueryHamtaAnvInfo = "Select fornamn, efternamn, anvnamn, losenord, administrator, email from anvandare where a_id = " +selectedAID;
                HashMap<String, String> anvandarInfo = Databas.getDatabas().fetchRow(sqlQueryHamtaAnvInfo);
                tfFornamn.setText(anvandarInfo.get("FORNAMN"));
                tfAnvNamn.setText(anvandarInfo.get("ANVNAMN"));
                tfEmail.setText(anvandarInfo.get("EMAIL"));
                tfEfternamn.setText(anvandarInfo.get("EFTERNAMN"));
                tfLosenord.setText(anvandarInfo.get("LOSENORD"));
                if(anvandarInfo.get("ADMINISTRATOR").equals("T")) {
                    chbAdmin.setSelected(true);
                } else {
                    chbAdmin.setSelected(false);
                }
                
            } else {
                selectedAID = anvID;
                String sqlQueryHamtaAnvInfo = "Select fornamn, efternamn, anvnamn, losenord, email from anvandare where a_id = " +selectedAID;
                HashMap<String, String> anvandarInfo = Databas.getDatabas().fetchRow(sqlQueryHamtaAnvInfo);
                tfFornamn.setText(anvandarInfo.get("FORNAMN"));
                tfAnvNamn.setText(anvandarInfo.get("ANVNAMN"));
                tfEmail.setText(anvandarInfo.get("EMAIL"));
                tfEfternamn.setText(anvandarInfo.get("EFTERNAMN"));
                tfLosenord.setText(anvandarInfo.get("LOSENORD"));
            }
        } catch (Exception e) {
                System.out.println(e.getMessage());
        }
    }
    
    private void updateValuesDB() {
        String fornamn = tfFornamn.getText();
        String efternamn = tfEfternamn.getText();
        String anvNamn = tfAnvNamn.getText();
        String losenord = tfLosenord.getText();
        String email = tfEmail.getText();
        try {
            HashMap<String, String> gammalInfo = Databas.getDatabas().fetchRow("select * from anvandare where a_id = " +selectedAID);
            if (chbAdmin.isSelected()) {
                Databas.getDatabas().update("update anvandare set administrator = 'T' where a_id = " +selectedAID);
                } else {
                Databas.getDatabas().update("update anvandare set administrator = 'F' where a_id = " +selectedAID);
                }
            if(!fornamn.equals(gammalInfo.get("FORNAMN"))) {
                Databas.getDatabas().update("update anvandare set fornamn = '" +fornamn+ "' where a_id = " +selectedAID);
            }
            if(!efternamn.equals(gammalInfo.get("EFTERNAMN"))) {
                Databas.getDatabas().update("update anvandare set efternamn = '" +efternamn+ "' where a_id = " +selectedAID);
            }
            if(!anvNamn.equals(gammalInfo.get("ANVNAMN"))) {
                Databas.getDatabas().update("update anvandare set anvnamn = '" +anvNamn+ "' where a_id = " +selectedAID);
            }
            if(!losenord.equals(gammalInfo.get("LOSENORD"))) {
                Databas.getDatabas().update("update anvandare set losenord = '" +losenord+ "' where a_id = " +selectedAID);
            }
            if(!email.equals(gammalInfo.get("EMAIL"))) {
                Databas.getDatabas().update("update anvandare set email = '" +email+ "' where a_id = " +selectedAID);
            }
        } catch (InfException e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void deleteUser() {
        String sqlfraga = "delete from anvandare where A_ID =" + selectedAID + ";";
        try {
            Databas.getDatabas().delete(sqlfraga);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void blockera()
    {
        boolean villBlockera = chb_Blockera.isSelected();
        String anvandare = (String)cb_Anvandare.getSelectedItem();
        String anvandareID= anvandare.replaceAll("[^0-9]", "");
        String sqlQueryBlockera = "insert into anvandareblock values (" +anvID+ ", " +anvandareID+ ")";
        String sqlQueryAvblockera = "delete from anvandareblock where a_id = " +anvID+ " and blockad_id = " +anvandareID;
        
        try
        {
            if(villBlockera) {
                Databas.getDatabas().insert(sqlQueryBlockera);
            } else {
                Databas.getDatabas().delete(sqlQueryAvblockera);
            }
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void fillCbAnvandare()
    {
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel() ;
        String sqlQueryHamtaAnvandare = "select a_id, fornamn, efternamn from anvandare where a_id not like " +anvID;
        
        try
        {
            ArrayList<HashMap<String, String>> anvFornamnEfternamn = Databas.getDatabas().fetchRows(sqlQueryHamtaAnvandare);
            for(int i = 0; i<anvFornamnEfternamn.size(); i++) {
                String a_id = anvFornamnEfternamn.get(i).get("A_ID");
                String fornamn = anvFornamnEfternamn.get(i).get("FORNAMN");
                String efternamn = anvFornamnEfternamn.get(i).get("EFTERNAMN");
                cbModel.addElement(fornamn + " " +efternamn+ " " +a_id);
            }
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
        cb_Anvandare.setModel(cbModel);
    }
    
    private void adminHide()
    {
        if(!Validering.adminCheck(anvID)) {
            cbAnv.setVisible(false);
            btnSkapa.setVisible(false);
            deleteu.setVisible(false);
            chbAdmin.setVisible(false);
            lblAnv.setVisible(false);
        } else {
            fillAnvCB();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSkapa;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbAnv;
    private javax.swing.JComboBox<String> cb_Anvandare;
    private javax.swing.JCheckBox chbAdmin;
    private javax.swing.JCheckBox chb_Blockera;
    private javax.swing.JButton deleteu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAnv;
    private javax.swing.JLabel lblAnvNamn;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblLosenord;
    private javax.swing.JButton saver;
    private javax.swing.JTextField tfAnvNamn;
    private javax.swing.JTextField tfEfternamn;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFornamn;
    private javax.swing.JTextField tfLosenord;
    // End of variables declaration//GEN-END:variables
}
